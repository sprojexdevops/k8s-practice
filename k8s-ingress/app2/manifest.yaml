apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2
  labels: # these are replicaset labels
    name: app2
    tier: frontend
spec:
  # modify replicas according to your case
  replicas: 1
  selector:
    # these are used to select the pod to create replicas
    matchLabels:
      name: app2
      tier: frontend
  # this is pod definition
  template:
    metadata:
      # these labels belongs to pod
      labels:
        name: app2
        tier: frontend
    spec:
      containers:
      - name: app2
        image: joindevops/app2:v1
---
kind: Service
apiVersion: v1
metadata:
  name: app2
spec:
  selector:
    name: app2
    tier: frontend
  ports:
  - name: nginx-svc-port
    protocol: TCP
    port: 80 # service port
    targetPort: 80 # container port
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app2
  annotations:
    # kubernetes.io/ingress.class: alb  # deprecated, can use 'ingressClassName' under spec
    alb.ingress.kubernetes.io/scheme: internet-facing
    # alb.ingress.kubernetes.io/subnets: subnet-05e1c98ed0f5b109e,subnet-07f5bb81f661df61b,subnet-0a4e6232630820516
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: <certificate arn>
    alb.ingress.kubernetes.io/listen-ports: '[ {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/tags: Environment=dev,Team=test
    alb.ingress.kubernetes.io/group.name: expense
    # can use same group name to avoid creation of multiple ALBs and to use same Ingress for all apps
spec:
  ingressClassName: alb   # kubernetes.io/ingress.class is deprecated
  rules:
  - host: "app2.daws81s.online"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: app2
            port:
              number: 80